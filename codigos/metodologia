Este trabalho tem como objetivo demostrar um novo método para detectar GWs. Este sistema consiste em um comitê de rede neural que pode detectar sinais de GW embutidos em dados ruidosos de séries temporais. Para isto, os passos a seguir foram necessarios para sua contrução.

Tanto para o processo de treinamento quanto para o teste de um comité de redes neurais, o primeiro passo é obter amostras experimentais. Primeiramente coletamos os dados das ondas gravitacionais e nos concentramos nos GWs das fusões de BBH, que dominam o número de detecções de GW, disponíveis no LIGO Open Science Center (LOSC). Após obtermos os dados analizamos e selecionamos 9 amostras de GWs as quais foram processadas com a ajuda da ferramenta PyCBC e geramos um template de GW equivalente a forma real das GWs capturados pelos detectores de GW (Hanford-H1 e Livingston-L1 Interferometers) de cada uma das amostras. Ao longo do processo clareamos os sinais e também ignoramos falhas, blips e outras fontes transitórias de ruído de detectores por enquanto.

Para que uma rede neural seja capaz de criar um modelo genérico é necessário que se disponha de dados em quantidade e qualidade suficientes. Por tanto os nove templates extraidos enteriormente foram multiplicados por 600 criando assim 5400 templates de GW. Extraímos 0,1 segundos de intervalo de cada forma de onda com pico centralizado, deslocamos a localização do pico de cada sinal aleatoriamente dentro de um intervalo de 0 a 0,05 segundos para a direita, a uma taxa de amostragem de 4096Hz, como mostra a figura 1.

Concomitantemente, criamos um PSD equivalente ao do LIGO e geramos 5400 amostras de ruídos com este mesmo espectro. Ao final da contrução dos dados, unimos as duas bases de dados(ruidos e templates) totalizando um conjunto de dados de treinamento, validação e teste com um total de 10800 amostras.

Para o conjunto de dados de simulação, foram necessários 2,0 segundos de observação de cada um dos 9 GWs reais do LIGO selecionadas com a onda centralizada, no qual, foram separados em várias janelas, gerando aproximadamente ~ 7780 janelas de dados para cada GW. Estes dados foram gerados para os dois detectores LIGO (Hanford-H1 e Livingston-L1) separadamente.

Finalmente todos os conjuntos de dados foram salvos em HDF (Hierarchical Data Format), que é um conjunto de formatos de arquivos (HDF4, HDF5) projetados para armazenar e organizar grandes quantidades de dados, a fim de facilitar a leitura dessa grande massa de dados, já que a maioria das ferramentas de aprendizado de máquina suporta esse tipo de arquivo.

Devido a natureza do problema decidimos usa um estrutura de rede neural simples para agilizar o processo de treinamento e de detecção das GWs. Para implementação, execução e testes das redes neurais, foi escolhido o software Matlab® R2018b, devido a sua ampla utilização pela comunidade científica.

Passamos um tempo significativo pesquisando uma ótimo arquiterura de rede neural e otimizando os hiperparâmetros para projetar as arquiteturas de RNA por tentativa e erro a fim de encontrar uma configuração que apresente o melhor desempenho. Para isso, foram feitos muitos testes, variando a quantidade de neurônios na camada escondida, a taxa de aprendizagem e a quantidade de épocas.

Após os testes iniciais, foi possível definir os seguintes parâmetros: uma camada oculta com 10 neuronios, 2 neurônios na camada de saída, número máximo de 100000 iterações como critério de parada, taxa de aprendizado de 0.025, a função de transferência de todas as camada é a linear, utilizamos o algoritmo de Levenberg-Marquardt (trainlm) e a função de adaptação de aprendizagem (learngdm). O erro médio quadrático (MSE) foi utilizado como o critério para se definir o melhor resultado, pois quanto menor o MSE melhor o resultado da rede. Os pesos iniciais foram gerados de forma aleatória, o que possibilitou que a cada novo treinamento, a rede se adaptasse buscando resultados diferentes dos anteriores. Além disso, restringimos as entradas a ter uma duração de 0,1 segundos e uma taxa de amostragem de 4096Hz ao longo desta análise, o que é mais do que suficiente para caracterizar os eventos que estamos considerando. A Figura 00 ilustra a arquitetura da rede neural e seus parâmetros.

No processo de treinamento  o conjunto de dados contruido para o treinamento contém 10800 dados. Destes dados, 70% são destinados para treinamento, 15% para validação e 15% para testes. A divisão dos dados é feita de forma randômica. O conjunto de dados para simulação contém aproximadamente ~70000  dados, e estes são utilizados para validar a rede realizando simulações com a rede treinada. 

A fim de melhorar o processo de classificação do nosso sistema, foram treinadas diversas RNA's e selecionadas 500 delas com o melhor desempenho e construimos uma máquina de comitê de rede neural o que melhora significativamente os resultados. A máquina do comitê de redes neurais desenvolvida na Fig. ~\Ref{fig:committee} mostra um número k, sendo k = 500 redes neurais treinadas de maneira individualmente independente, que compartilham uma entrada comum e cuja produção individual é de alguma forma combinada para produzir uma saída geral. As saídas dessas redes são colocadas em um módulo combinador que desempenha a função de calcular a média das saídas combinadas de todas as redes neurais do comitê e apresentar o resultado semifinal do comitê da RNA.

Diferente do trabalho pioneiro de detecção de ondas gravitacionais por redes neurais, apresentado por Gerson, o resultado do nosso comité se comporta como um termometro de detecção de ondas gravitacionais ao longo do tempo. Consequentemente, a simulação do nosso classificador será aplicado ao fluxo de dados contínuo usando janelas deslizantes de 0,1 segundos de largura com 200 microsegundo de diferença. 

O resultado das duas saidas das nossas RNA's variam de 0 a 1, sendo assim, podemos tranformar essas duas saida em um score a partir da equação 1. Assim como o LIGO usa os detectores (Hanford-H1 e Livingston-L1) para confirmar a detecção das GW's, nos usamos o resultado da simulação dos dois detectores Fig 1 e 2, fizemos uma conincidencia entre os dois resultados, que nada mais é que uma multiplicação entre si e geramos o resultado final que se comporta como um temometro de detecção de GW ao longo do tempo Fig 3. Assim sendo, quanto mais o score se aproxima do valor 1 significa que existe GW. em contrapartida se o valor do score se aproximar de 0 significa que não existe GW. A figura 1 ilustra um exemplo da detecção ao longo do tempo para a onda gravitacional GW150914.

